{
  "version": 3,
  "sources": ["../../@robloche/chartjs-plugin-streaming/dist/chartjs-plugin-streaming.esm.js"],
  "sourcesContent": ["/*!\n * @robloche/chartjs-plugin-streaming v3.0.4\n * https://github.com/Robloche/chartjs-plugin-streaming\n * (c) 2017-2023 Akihiko Kusanagi\n * Released under the MIT license\n */\nimport { registry, defaults, TimeScale, DatasetController, Chart } from 'chart.js';\nimport { each, valueOrDefault, requestAnimFrame, callback, noop, isFinite, clipArea, unclipArea, isNumber, _lookup, isArray, getRelativePosition } from 'chart.js/helpers';\n\nfunction clamp(value, lower, upper) {\n  return Math.min(Math.max(value, lower), upper);\n}\nfunction resolveOption(scale, key) {\n  const realtimeOpts = scale.options.realtime;\n  const streamingOpts = scale.chart.options.plugins.streaming;\n  return valueOrDefault(realtimeOpts[key], streamingOpts[key]);\n}\nfunction getAxisMap(element, {x, y}, {xAxisID, yAxisID}) {\n  const axisMap = {};\n  each(x, key => {\n    axisMap[key] = {axisId: xAxisID};\n  });\n  each(y, key => {\n    axisMap[key] = {axisId: yAxisID};\n  });\n  return axisMap;\n}\nconst cancelAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return noop;\n  }\n  return window.cancelAnimationFrame;\n}());\nfunction startFrameRefreshTimer(context, func) {\n  if (!context.frameRequestID) {\n    const refresh = () => {\n      const nextRefresh = context.nextRefresh || 0;\n      const now = Date.now();\n      if (nextRefresh <= now) {\n        const newFrameRate = callback(func);\n        const frameDuration = 1000 / (Math.max(newFrameRate, 0) || 30);\n        const newNextRefresh = context.nextRefresh + frameDuration || 0;\n        context.nextRefresh = newNextRefresh > now ? newNextRefresh : now + frameDuration;\n      }\n      context.frameRequestID = requestAnimFrame.call(window, refresh);\n    };\n    context.frameRequestID = requestAnimFrame.call(window, refresh);\n  }\n}\nfunction stopFrameRefreshTimer(context) {\n  const frameRequestID = context.frameRequestID;\n  if (frameRequestID) {\n    cancelAnimFrame.call(window, frameRequestID);\n    delete context.frameRequestID;\n  }\n}\nfunction stopDataRefreshTimer(context) {\n  const refreshTimerID = context.refreshTimerID;\n  if (refreshTimerID) {\n    clearInterval(refreshTimerID);\n    delete context.refreshTimerID;\n    delete context.refreshInterval;\n  }\n}\nfunction startDataRefreshTimer(context, func, interval) {\n  if (!context.refreshTimerID) {\n    context.refreshTimerID = setInterval(() => {\n      const newInterval = callback(func);\n      if (context.refreshInterval !== newInterval && !isNaN(newInterval)) {\n        stopDataRefreshTimer(context);\n        startDataRefreshTimer(context, func, newInterval);\n      }\n    }, interval || 0);\n    context.refreshInterval = interval || 0;\n  }\n}\n\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ?\n    {value: scale.getPixelForValue(value), transitionable: true} :\n    {value: fallback};\n}\nfunction updateBoxAnnotation(element, chart, options) {\n  const {scales, chartArea} = chart;\n  const {xScaleID, yScaleID, xMin, xMax, yMin, yMax} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const {top, left, bottom, right} = chartArea;\n  const streaming = element.$streaming = {};\n  if (xScale) {\n    const min = scaleValue(xScale, xMin, left);\n    const max = scaleValue(xScale, xMax, right);\n    const reverse = min.value > max.value;\n    if (min.transitionable) {\n      streaming[reverse ? 'x2' : 'x'] = {axisId: xScaleID};\n    }\n    if (max.transitionable) {\n      streaming[reverse ? 'x' : 'x2'] = {axisId: xScaleID};\n    }\n    if (min.transitionable !== max.transitionable) {\n      streaming.width = {axisId: xScaleID, reverse: min.transitionable};\n    }\n  }\n  if (yScale) {\n    const min = scaleValue(yScale, yMin, top);\n    const max = scaleValue(yScale, yMax, bottom);\n    const reverse = min.value > max.value;\n    if (min.transitionable) {\n      streaming[reverse ? 'y2' : 'y'] = {axisId: yScaleID};\n    }\n    if (max.transitionable) {\n      streaming[reverse ? 'y' : 'y2'] = {axisId: yScaleID};\n    }\n    if (min.transitionable !== max.transitionable) {\n      streaming.height = {axisId: yScaleID, reverse: min.transitionable};\n    }\n  }\n}\nfunction updateLineAnnotation(element, chart, options) {\n  const {scales, chartArea} = chart;\n  const {scaleID, value} = options;\n  const scale = scales[scaleID];\n  const {top, left, bottom, right} = chartArea;\n  const streaming = element.$streaming = {};\n  if (scale) {\n    const isHorizontal = scale.isHorizontal();\n    const pixel = scaleValue(scale, value);\n    if (pixel.transitionable) {\n      streaming[isHorizontal ? 'x' : 'y'] = {axisId: scaleID};\n      streaming[isHorizontal ? 'x2' : 'y2'] = {axisId: scaleID};\n    }\n    return isHorizontal ? {top, bottom} : {left, right};\n  }\n  const {xScaleID, yScaleID, xMin, xMax, yMin, yMax} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const clip = {};\n  if (xScale) {\n    const min = scaleValue(xScale, xMin);\n    const max = scaleValue(xScale, xMax);\n    if (min.transitionable) {\n      streaming.x = {axisId: xScaleID};\n    } else {\n      clip.left = left;\n    }\n    if (max.transitionable) {\n      streaming.x2 = {axisId: xScaleID};\n    } else {\n      clip.right = right;\n    }\n  }\n  if (yScale) {\n    const min = scaleValue(yScale, yMin);\n    const max = scaleValue(yScale, yMax);\n    if (min.transitionable) {\n      streaming.y = {axisId: yScaleID};\n    } else {\n      clip.top = top;\n    }\n    if (max.transitionable) {\n      streaming.y2 = {axisId: yScaleID};\n    } else {\n      clip.bottom = bottom;\n    }\n  }\n  return clip;\n}\nfunction updatePointAnnotation(element, chart, options) {\n  const scales = chart.scales;\n  const {xScaleID, yScaleID, xValue, yValue} = options;\n  const xScale = scales[xScaleID];\n  const yScale = scales[yScaleID];\n  const streaming = element.$streaming = {};\n  if (xScale) {\n    const x = scaleValue(xScale, xValue);\n    if (x.transitionable) {\n      streaming.x = {axisId: xScaleID};\n    }\n  }\n  if (yScale) {\n    const y = scaleValue(yScale, yValue);\n    if (y.transitionable) {\n      streaming.y = {axisId: yScaleID};\n    }\n  }\n}\nfunction initAnnotationPlugin() {\n  const BoxAnnotation = registry.getElement('boxAnnotation');\n  const LineAnnotation = registry.getElement('lineAnnotation');\n  const PointAnnotation = registry.getElement('pointAnnotation');\n  const resolveBoxAnnotationProperties = BoxAnnotation.prototype.resolveElementProperties;\n  const resolveLineAnnotationProperties = LineAnnotation.prototype.resolveElementProperties;\n  const resolvePointAnnotationProperties = PointAnnotation.prototype.resolveElementProperties;\n  BoxAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    updateBoxAnnotation(this, chart, options);\n    return resolveBoxAnnotationProperties.call(this, chart, options);\n  };\n  LineAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    const chartArea = chart.chartArea;\n    chart.chartArea = updateLineAnnotation(this, chart, options);\n    const properties = resolveLineAnnotationProperties.call(this, chart, options);\n    chart.chartArea = chartArea;\n    return properties;\n  };\n  PointAnnotation.prototype.resolveElementProperties = function(chart, options) {\n    updatePointAnnotation(this, chart, options);\n    return resolvePointAnnotationProperties.call(this, chart, options);\n  };\n}\nfunction attachChart$1(plugin, chart) {\n  const streaming = chart.$streaming;\n  if (streaming.annotationPlugin !== plugin) {\n    const afterUpdate = plugin.afterUpdate;\n    initAnnotationPlugin();\n    streaming.annotationPlugin = plugin;\n    plugin.afterUpdate = (_chart, args, options) => {\n      const mode = args.mode;\n      const animationOpts = options.animation;\n      if (mode === 'quiet') {\n        options.animation = false;\n      }\n      afterUpdate.call(this, _chart, args, options);\n      if (mode === 'quiet') {\n        options.animation = animationOpts;\n      }\n    };\n  }\n}\nfunction getElements(chart) {\n  const plugin = chart.$streaming.annotationPlugin;\n  if (plugin) {\n    const state = plugin._getState(chart);\n    return state && state.elements || [];\n  }\n  return [];\n}\nfunction detachChart$1(chart) {\n  delete chart.$streaming.annotationPlugin;\n}\n\nconst transitionKeys$1 = {x: ['x', 'caretX'], y: ['y', 'caretY']};\nfunction update$1(...args) {\n  const me = this;\n  const element = me.getActiveElements()[0];\n  if (element) {\n    const meta = me.chart.getDatasetMeta(element.datasetIndex);\n    me.$streaming = getAxisMap(me, transitionKeys$1, meta);\n  } else {\n    me.$streaming = {};\n  }\n  me.constructor.prototype.update.call(me, ...args);\n}\n\nconst chartStates = new WeakMap();\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {originalScaleOptions: {}};\n    chartStates.set(chart, state);\n  }\n  return state;\n}\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\nfunction storeOriginalScaleOptions(chart) {\n  const {originalScaleOptions} = getState(chart);\n  const scales = chart.scales;\n  each(scales, scale => {\n    const id = scale.id;\n    if (!originalScaleOptions[id]) {\n      originalScaleOptions[id] = {\n        duration: resolveOption(scale, 'duration'),\n        delay: resolveOption(scale, 'delay')\n      };\n    }\n  });\n  each(originalScaleOptions, (opt, key) => {\n    if (!scales[key]) {\n      delete originalScaleOptions[key];\n    }\n  });\n  return originalScaleOptions;\n}\nfunction zoomRealTimeScale(scale, zoom, center, limits) {\n  const {chart, axis} = scale;\n  const {minDuration = 0, maxDuration = Infinity, minDelay = -Infinity, maxDelay = Infinity} = limits && limits[axis] || {};\n  const realtimeOpts = scale.options.realtime;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const newDuration = clamp(duration * (2 - zoom), minDuration, maxDuration);\n  let maxPercent, newDelay;\n  storeOriginalScaleOptions(chart);\n  if (scale.isHorizontal()) {\n    maxPercent = (scale.right - center.x) / (scale.right - scale.left);\n  } else {\n    maxPercent = (scale.bottom - center.y) / (scale.bottom - scale.top);\n  }\n  newDelay = delay + maxPercent * (duration - newDuration);\n  realtimeOpts.duration = newDuration;\n  realtimeOpts.delay = clamp(newDelay, minDelay, maxDelay);\n  return newDuration !== scale.max - scale.min;\n}\nfunction panRealTimeScale(scale, delta, limits) {\n  const {chart, axis} = scale;\n  const {minDelay = -Infinity, maxDelay = Infinity} = limits && limits[axis] || {};\n  const delay = resolveOption(scale, 'delay');\n  const newDelay = delay + (scale.getValueForPixel(delta) - scale.getValueForPixel(0));\n  storeOriginalScaleOptions(chart);\n  scale.options.realtime.delay = clamp(newDelay, minDelay, maxDelay);\n  return true;\n}\nfunction resetRealTimeScaleOptions(chart) {\n  const originalScaleOptions = storeOriginalScaleOptions(chart);\n  each(chart.scales, scale => {\n    const realtimeOptions = scale.options.realtime;\n    if (realtimeOptions) {\n      const original = originalScaleOptions[scale.id];\n      if (original) {\n        realtimeOptions.duration = original.duration;\n        realtimeOptions.delay = original.delay;\n      } else {\n        delete realtimeOptions.duration;\n        delete realtimeOptions.delay;\n      }\n    }\n  });\n}\nfunction initZoomPlugin(plugin) {\n  plugin.zoomFunctions.realtime = zoomRealTimeScale;\n  plugin.panFunctions.realtime = panRealTimeScale;\n}\nfunction attachChart(plugin, chart) {\n  const streaming = chart.$streaming;\n  if (streaming.zoomPlugin !== plugin) {\n    const resetZoom = streaming.resetZoom = chart.resetZoom;\n    initZoomPlugin(plugin);\n    chart.resetZoom = transition => {\n      resetRealTimeScaleOptions(chart);\n      resetZoom(transition);\n    };\n    streaming.zoomPlugin = plugin;\n  }\n}\nfunction detachChart(chart) {\n  const streaming = chart.$streaming;\n  if (streaming.zoomPlugin) {\n    chart.resetZoom = streaming.resetZoom;\n    removeState(chart);\n    delete streaming.resetZoom;\n    delete streaming.zoomPlugin;\n  }\n}\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction determineStepSize(min, max, unit, capacity) {\n  const range = max - min;\n  const {size: milliseconds, steps} = INTERVALS[unit];\n  let factor;\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n  for (let i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n  return factor;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const range = max - min;\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const {common, size, steps} = INTERVALS[UNITS[i]];\n    const factor = steps ? steps[steps.length - 1] : Number.MAX_SAFE_INTEGER;\n    if (common && Math.ceil(range / (factor * size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nconst datasetPropertyKeys = [\n  'pointBackgroundColor',\n  'pointBorderColor',\n  'pointBorderWidth',\n  'pointRadius',\n  'pointRotation',\n  'pointStyle',\n  'pointHitRadius',\n  'pointHoverBackgroundColor',\n  'pointHoverBorderColor',\n  'pointHoverBorderWidth',\n  'pointHoverRadius',\n  'backgroundColor',\n  'borderColor',\n  'borderSkipped',\n  'borderWidth',\n  'hoverBackgroundColor',\n  'hoverBorderColor',\n  'hoverBorderWidth',\n  'hoverRadius',\n  'hitRadius',\n  'radius',\n  'rotation'\n];\nfunction clean(scale) {\n  const {chart, id, max} = scale;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const ttl = resolveOption(scale, 'ttl');\n  const pause = resolveOption(scale, 'pause');\n  const min = Date.now() - (isNaN(ttl) ? duration + delay : ttl);\n  let i, start, count, removalRange;\n  each(chart.data.datasets, (dataset, datasetIndex) => {\n    const meta = chart.getDatasetMeta(datasetIndex);\n    const axis = id === meta.xAxisID && 'x' || id === meta.yAxisID && 'y';\n    if (axis) {\n      const controller = meta.controller;\n      const data = dataset.data;\n      const length = data.length;\n      if (pause) {\n        for (i = 0; i < length; ++i) {\n          const point = controller.getParsed(i);\n          if (point && !(point[axis] < max)) {\n            break;\n          }\n        }\n        start = i + 2;\n      } else {\n        start = 0;\n      }\n      for (i = start; i < length; ++i) {\n        const point = controller.getParsed(i);\n        if (!point || !(point[axis] <= min)) {\n          break;\n        }\n      }\n      count = i - start;\n      if (isNaN(ttl)) {\n        count = Math.max(count - 2, 0);\n      }\n      data.splice(start, count);\n      each(datasetPropertyKeys, key => {\n        if (isArray(dataset[key])) {\n          dataset[key].splice(start, count);\n        }\n      });\n      each(dataset.datalabels, value => {\n        if (isArray(value)) {\n          value.splice(start, count);\n        }\n      });\n      if (typeof data[0] !== 'object') {\n        removalRange = {\n          start: start,\n          count: count\n        };\n      }\n      each(chart._active, (item, index) => {\n        if (item.datasetIndex === datasetIndex && item.index >= start) {\n          if (item.index >= start + count) {\n            item.index -= count;\n          } else {\n            chart._active.splice(index, 1);\n          }\n        }\n      }, null, true);\n    }\n  });\n  if (removalRange) {\n    chart.data.labels.splice(removalRange.start, removalRange.count);\n  }\n}\nfunction transition(element, id, translate) {\n  const animations = element.$animations || {};\n  each(element.$streaming, (item, key) => {\n    if (item.axisId === id) {\n      const delta = item.reverse ? -translate : translate;\n      const animation = animations[key];\n      if (isFinite(element[key])) {\n        element[key] -= delta;\n      }\n      if (animation) {\n        animation._from -= delta;\n        animation._to -= delta;\n      }\n    }\n  });\n}\nfunction scroll(scale) {\n  const {chart, id, $realtime: realtime} = scale;\n  const duration = resolveOption(scale, 'duration');\n  const delay = resolveOption(scale, 'delay');\n  const isHorizontal = scale.isHorizontal();\n  const length = isHorizontal ? scale.width : scale.height;\n  const now = Date.now();\n  const tooltip = chart.tooltip;\n  const annotations = getElements(chart);\n  let offset = length * (now - realtime.head) / duration;\n  if (isHorizontal === !!scale.options.reverse) {\n    offset = -offset;\n  }\n  each(chart.data.datasets, (dataset, datasetIndex) => {\n    const meta = chart.getDatasetMeta(datasetIndex);\n    const {data: elements = [], dataset: element} = meta;\n    for (let i = 0, ilen = elements.length; i < ilen; ++i) {\n      transition(elements[i], id, offset);\n    }\n    if (element) {\n      transition(element, id, offset);\n      delete element._path;\n    }\n  });\n  for (let i = 0, ilen = annotations.length; i < ilen; ++i) {\n    transition(annotations[i], id, offset);\n  }\n  if (tooltip) {\n    transition(tooltip, id, offset);\n  }\n  scale.max = now - delay;\n  scale.min = scale.max - duration;\n  realtime.head = now;\n}\nclass RealTimeScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this.$realtime = this.$realtime || {};\n  }\n  init(scaleOpts, opts) {\n    const me = this;\n    super.init(scaleOpts, opts);\n    startDataRefreshTimer(me.$realtime, () => {\n      const chart = me.chart;\n      const onRefresh = resolveOption(me, 'onRefresh');\n      callback(onRefresh, [chart], me);\n      clean(me);\n      chart.update('quiet');\n      return resolveOption(me, 'refresh');\n    });\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const {$realtime: realtime, options} = me;\n    const {bounds, offset, ticks: ticksOpts} = options;\n    const {autoSkip, source, major: majorTicksOpts} = ticksOpts;\n    const majorEnabled = majorTicksOpts.enabled;\n    if (resolveOption(me, 'pause')) {\n      stopFrameRefreshTimer(realtime);\n    } else {\n      if (!realtime.frameRequestID) {\n        realtime.head = Date.now();\n      }\n      startFrameRefreshTimer(realtime, () => {\n        const chart = me.chart;\n        const streaming = chart.$streaming;\n        scroll(me);\n        if (streaming) {\n          callback(streaming.render, [chart]);\n        }\n        return resolveOption(me, 'frameRate');\n      });\n    }\n    options.bounds = undefined;\n    options.offset = false;\n    ticksOpts.autoSkip = false;\n    ticksOpts.source = source === 'auto' ? '' : source;\n    majorTicksOpts.enabled = true;\n    super.update(maxWidth, maxHeight, margins);\n    options.bounds = bounds;\n    options.offset = offset;\n    ticksOpts.autoSkip = autoSkip;\n    ticksOpts.source = source;\n    majorTicksOpts.enabled = majorEnabled;\n  }\n  buildTicks() {\n    const me = this;\n    const duration = resolveOption(me, 'duration');\n    const delay = resolveOption(me, 'delay');\n    const max = me.$realtime.head - delay;\n    const min = max - duration;\n    const maxArray = [1e15, max];\n    const minArray = [-1e15, min];\n    Object.defineProperty(me, 'min', {\n      get: () => minArray.shift(),\n      set: noop\n    });\n    Object.defineProperty(me, 'max', {\n      get: () => maxArray.shift(),\n      set: noop\n    });\n    const ticks = super.buildTicks();\n    delete me.min;\n    delete me.max;\n    me.min = min;\n    me.max = max;\n    return ticks;\n  }\n  calculateLabelRotation() {\n    const ticksOpts = this.options.ticks;\n    const maxRotation = ticksOpts.maxRotation;\n    ticksOpts.maxRotation = ticksOpts.minRotation || 0;\n    super.calculateLabelRotation();\n    ticksOpts.maxRotation = maxRotation;\n  }\n  fit() {\n    const me = this;\n    const options = me.options;\n    super.fit();\n    if (options.ticks.display && options.display && me.isHorizontal()) {\n      me.paddingLeft = 3;\n      me.paddingRight = 3;\n      me._handleMargins();\n    }\n  }\n  draw(chartArea) {\n    const me = this;\n    const {chart, ctx} = me;\n    const area = me.isHorizontal() ?\n      {\n        left: chartArea.left,\n        top: 0,\n        right: chartArea.right,\n        bottom: chart.height\n      } : {\n        left: 0,\n        top: chartArea.top,\n        right: chart.width,\n        bottom: chartArea.bottom\n      };\n    me._gridLineItems = null;\n    me._labelItems = null;\n    clipArea(ctx, area);\n    super.draw(chartArea);\n    unclipArea(ctx);\n  }\n  destroy() {\n    const realtime = this.$realtime;\n    stopFrameRefreshTimer(realtime);\n    stopDataRefreshTimer(realtime);\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const duration = resolveOption(me, 'duration');\n    const delay = resolveOption(me, 'delay');\n    const refresh = resolveOption(me, 'refresh');\n    const max = me.$realtime.head - delay;\n    const min = max - duration;\n    const capacity = me._getLabelCapacity(min);\n    const {time: timeOpts, ticks: ticksOpts} = me.options;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    const major = determineMajorUnit(minor);\n    const stepSize = timeOpts.stepSize || determineStepSize(min, max, minor, capacity);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const majorTicksEnabled = ticksOpts.major.enabled;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const interval = INTERVALS[minor];\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    time = first;\n    if (majorTicksEnabled && major && !hasWeekday && !timeOpts.round) {\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n    const timestamps = ticksOpts.source === 'data' && me.getDataTimestamps();\n    for (count = 0; time < max + refresh; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max + refresh || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n}\nRealTimeScale.id = 'realtime';\nRealTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  realtime: {},\n  ticks: {\n    autoSkip: false,\n    source: 'auto',\n    major: {\n      enabled: true\n    }\n  }\n};\ndefaults.describe('scale.realtime', {\n  _scriptable: name => name !== 'onRefresh'\n});\n\nvar version = \"3.0.4\";\n\ndefaults.set('transitions', {\n  quiet: {\n    animation: {\n      duration: 0\n    }\n  }\n});\nconst transitionKeys = {x: ['x', 'cp1x', 'cp2x'], y: ['y', 'cp1y', 'cp2y']};\nfunction update(mode) {\n  const me = this;\n  if (mode === 'quiet') {\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      const controller = me.getDatasetMeta(datasetIndex).controller;\n      controller._setStyle = function(element, index, _mode, active) {\n        DatasetController.prototype._setStyle.call(this, element, index, 'quiet', active);\n      };\n    });\n  }\n  Chart.prototype.update.call(me, mode);\n  if (mode === 'quiet') {\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      delete me.getDatasetMeta(datasetIndex).controller._setStyle;\n    });\n  }\n}\nfunction render(chart) {\n  const streaming = chart.$streaming;\n  chart.render();\n  if (streaming.lastMouseEvent) {\n    setTimeout(() => {\n      const lastMouseEvent = streaming.lastMouseEvent;\n      if (lastMouseEvent) {\n        chart._eventHandler(lastMouseEvent);\n      }\n    }, 0);\n  }\n}\nvar StreamingPlugin = {\n  id: 'streaming',\n  version,\n  beforeInit(chart) {\n    const streaming = chart.$streaming = chart.$streaming || {render};\n    const canvas = streaming.canvas = chart.canvas;\n    const mouseEventListener = streaming.mouseEventListener = event => {\n      const pos = getRelativePosition(event, chart);\n      streaming.lastMouseEvent = {\n        type: 'mousemove',\n        chart: chart,\n        native: event,\n        x: pos.x,\n        y: pos.y\n      };\n    };\n    canvas.addEventListener('mousedown', mouseEventListener);\n    canvas.addEventListener('mouseup', mouseEventListener);\n  },\n  afterInit(chart) {\n    chart.update = update;\n  },\n  beforeUpdate(chart) {\n    const {scales, elements} = chart.options;\n    const tooltip = chart.tooltip;\n    each(scales, ({type}) => {\n      if (type === 'realtime') {\n        elements.line.capBezierPoints = false;\n      }\n    });\n    if (tooltip) {\n      tooltip.update = update$1;\n    }\n    try {\n      const plugin = registry.getPlugin('annotation');\n      attachChart$1(plugin, chart);\n    } catch (e) {\n      detachChart$1(chart);\n    }\n    try {\n      const plugin = registry.getPlugin('zoom');\n      attachChart(plugin, chart);\n    } catch (e) {\n      detachChart(chart);\n    }\n  },\n  beforeDatasetUpdate(chart, args) {\n    const {meta, mode} = args;\n    if (mode === 'quiet') {\n      const {controller, $animations} = meta;\n      if ($animations && $animations.visible && $animations.visible._active) {\n        controller.updateElement = noop;\n        controller.updateSharedOptions = noop;\n      }\n    }\n  },\n  afterDatasetUpdate(chart, args) {\n    const {meta, mode} = args;\n    const {data: elements = [], dataset: element, controller} = meta;\n    for (let i = 0, ilen = elements.length; i < ilen; ++i) {\n      elements[i].$streaming = getAxisMap(elements[i], transitionKeys, meta);\n    }\n    if (element) {\n      element.$streaming = getAxisMap(element, transitionKeys, meta);\n    }\n    if (mode === 'quiet') {\n      delete controller.updateElement;\n      delete controller.updateSharedOptions;\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const {ctx, chartArea, width, height} = chart;\n    const {xAxisID, yAxisID, controller} = args.meta;\n    const area = {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    };\n    if (xAxisID && controller.getScaleForId(xAxisID) instanceof RealTimeScale) {\n      area.left = chartArea.left;\n      area.right = chartArea.right;\n    }\n    if (yAxisID && controller.getScaleForId(yAxisID) instanceof RealTimeScale) {\n      area.top = chartArea.top;\n      area.bottom = chartArea.bottom;\n    }\n    clipArea(ctx, area);\n  },\n  afterDatasetDraw(chart) {\n    unclipArea(chart.ctx);\n  },\n  beforeEvent(chart, args) {\n    const streaming = chart.$streaming;\n    const event = args.event;\n    if (event.type === 'mousemove') {\n      streaming.lastMouseEvent = event;\n    } else if (event.type === 'mouseout') {\n      delete streaming.lastMouseEvent;\n    }\n  },\n  afterDestroy(chart) {\n    const {scales, $streaming: streaming, tooltip} = chart;\n    const {canvas, mouseEventListener} = streaming;\n    delete chart.update;\n    if (tooltip) {\n      delete tooltip.update;\n    }\n    canvas.removeEventListener('mousedown', mouseEventListener);\n    canvas.removeEventListener('mouseup', mouseEventListener);\n    each(scales, scale => {\n      if (scale instanceof RealTimeScale) {\n        scale.destroy();\n      }\n    });\n  },\n  defaults: {\n    duration: 10000,\n    delay: 0,\n    frameRate: 30,\n    refresh: 1000,\n    onRefresh: null,\n    pause: false,\n    ttl: undefined\n  },\n  descriptors: {\n    _scriptable: name => name !== 'onRefresh'\n  }\n};\n\nconst registerables = [StreamingPlugin, RealTimeScale];\n\nexport { RealTimeScale, StreamingPlugin, registerables as default };\n"],
  "mappings": "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",
  "names": ["transition"]
}
